/* ------- *
 * $MIXINS *
 * ------- */

/**
 * Mixin providing a PX fallback for REM font-sizes
 * Source: http://css-tricks.com/snippets/css/less-mixin-for-rem-font-sizing/
 */
@mixin rem($val) {
	font-size: ($val * 10) + px;
	font-size: $val + rem;
}

/**
 * Mixin handling breakpoints for media queries
 * Source: http://css-tricks.com/media-queries-sass-3-2-and-codekit/
 */
@mixin breakpoint($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (max-width: #{map-get($breakpoints, $breakpoint)}) {
      @content;
    }
  }
  @else {
    @warn "Invalid breakpoint `#{$breakpoint}`.";
  }
} 

/**
 * Mixins used by helper classes .pull-image--$pos and .pull-quote--$pos
 * 1. returns `left` if given `right` and vice versa
 */
@mixin pull-quote($direction) {
	$opposite: opposite-direction($direction); /* 1 */

	text-align: $opposite;
	float: $direction;
	margin: 0 0 $space 0;
	margin-#{$direction}: -4em;	
	margin-#{$opposite}: $space;	

	@include breakpoint(medium) {
		margin-#{$direction}: 0;
	}
}

@mixin pull-image($direction) {
	$opposite: opposite-direction($direction); /* 1 */

	float: $direction;
	margin: 0 0 $space 0;
	margin-#{$opposite}: $space;
}

@mixin size($width, $height: $width) {
  width: $width;
  height: $height;
}

@mixin position($position, $args) {
  @each $o in top right bottom left {
    $i: index($args, $o);
 
    @if $i and $i + 1 <= length($args) and type-of(nth($args, $i + 1)) == number  {
      #{$o}: nth($args, $i + 1);
    }
  }
 
  position: $position;
}
 
@mixin absolute($args) {
  @include position(absolute, $args);
}
 
@mixin fixed($args) {
  @include position(fixed, $args);
}
 
@mixin relative($args) {
  @include position(relative, $args);
}

@function opposite-direction($directions) {
  $opposite-directions: ();
  $direction-map: (
    'top': 'bottom',
    'right': 'left',
    'bottom': 'top',
    'left': 'right',
    'ltr': 'rtl',
    'rtl': 'ltr'
  );
 
  @each $direction in $directions {
    $opposite-direction: map-get($direction-map, $direction);
    @if $opposite-direction != null { 
      $opposite-directions: append($opposite-directions, #{$opposite-direction});
    }
    @else {
      @warn "No opposite direction can be found for `#{$direction}`.";
    }
  }
 
  @return $opposite-directions;
}