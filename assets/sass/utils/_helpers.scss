/* -------- *
 * $HELPERS *
 * -------- */

/**
 * Clearfix
 * 1. Only meant to be extended from within the stylesheets
 */
%clearfix { /* 1 */
	&:after {
    display: table;
    content: "";
		clear: both;
	}
}

/**
 * Prevent icon from sticking to the text
 */
/*span*/.icon-left {
  margin-right: 5px;
}

/*span*/.icon-right {
  margin-left: 5px;
}

/**
 * Quotes & images pulling
 * 1. Center images/quotes on small screens
 */
%pull-image {
	max-width: 15em;

	@include breakpoint(small) { /* 1 */
		float: none;
		width: 100%;
		margin: $space auto;
	}
}

%pull-quote {
  @include rem(3);
	max-width: 8em;
	line-height: 1.35;
	border: 6px solid $main-color;
	border-left: none;
	border-right: none;
	padding: $space 0;

	&:after,
	&:before {
		font-weight: bold;
	}

	&:before { content: "\201c"; }
	&:after  { content: "\201d"; }

	@include breakpoint(small) { /* 1 */
		float: none			     !important;
		margin: $space auto  !important;
		text-align: center   !important;
		padding: $space .5em !important;
		max-width: 100% 	   !important;
	}
} 

/**
 * Creates helpers for both images and quotes
 * for both directions (left and righ)
 * 1. Extends default styles no matter the direction
 * 2. Applies styles according to the given direction
 */
@each $dir in left, right {
  /*blockquote*/.pull-quote--#{$dir} {
    @extend %pull-quote;        /* 1 */
    @include pull-quote($dir);  /* 2 */
  }

  /*img*/.pull-image--#{$dir} {
    @extend %pull-image;        /* 1 */
    @include pull-image($dir); /* 2 */
  }
}

/**
 * Hidden yet accessible content
 * Source: https://github.com/h5bp/html5-boilerplate/blob/master/css/main.css
 */
.visually-hidden { 
  @include size(1px);
	position: absolute;
	overflow: hidden; 
	clip: rect(0 0 0 0);
	margin: -1px;
	padding: 0;
	border: none; 
}

/**
 * Secondary content; could be ommited without altering the meaning
 */
/*p*/.note {
	font-style: italic;
	padding-left: $space;
}

/**
 * Right after main title in articles
 */
/*p*/.metadata {
	color: $lightgrey;
	text-transform: uppercase;
	margin-top: .5em;
}

/**
 * Often used as an introduction paragraph in articles
 * 1. To avoid overlapping in case there is a table of contents
 */
/*p*/.explanation {
	background: #F4F4F4;
	border-left: .5em solid $main-color;
	padding: $space;
	font-style: italic;
	margin-bottom: $space;

	.table-of-contents ~ section & { /* 1 */
		margin-right: 42%;
	}

	@include breakpoint(small) {
		margin-right: 0 !important;
	}
}

/**
 * Figures
 * <figure class="figure">
 *   <img src="path/to/image.jpg" alt="" />
 *   <figcaption>Optional figcaption</figcaption>
 * </figure>
 */
.figure {
	padding: 1em 1em 0 1em;
	background: #efefef;
	border: 1px solid #ddd;
	border-radius: 3px;
	margin: $space auto;

	figcaption {
    @include rem(1.3);
		font-style: italic;
		padding: .5em 0;
		text-align: center;
	}

	@include breakpoint(small) {
		width: 100% !important;
		margin: $space auto !important;
		float: none !important;

		img {
			max-width: 100% !important;
		}
	}
}

.figure--left {
	float: left;
	margin: 0 1em .5em 0; 
	width: -webkit-min-content;
	width: -moz-min-content;
	width: min-content;

	img {
		max-width: 13em;
	}

	@extend .figure;
}

.figure--right {
	float: right;
	margin: 0 0 .5em 1em;
	width: -webkit-min-content;
	width: -moz-min-content;
	width: min-content; 

	img {
		max-width: 13em;
	}

	@extend .figure;
}

/**
 * Figure numbering if numberedFigures variable set to true
 */
.numbered-figures {
	counter-reset: figures;

	figcaption { 
		counter-increment: figures;

		&:before {
			content: 'Fig. ' counter(figures) ' - ';
		}
	}
}